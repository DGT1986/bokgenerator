import openai
import os
import streamlit as st
import requests
from ebooklib import epub
from dotenv import load_dotenv
from PIL import Image
from io import BytesIO

# Last inn API-n칮kkel fra .env-fil
load_dotenv()
api_key = os.getenv("OPENAI_API_KEY")

# Opprett OpenAI-klient
client = openai.Client(api_key=api_key)

# 游댳 Bestselgende Amazon KDP-kategorier
bestseller_nisjer = [
    "Selvhjelp og personlig utvikling",
    "Penger og investeringer",
    "Online business og passiv inntekt",
    "Produktivitet og vaner",
    "Mental helse og mindfulness",
    "AI og teknologi",
    "Vekttap og helse",
    "Dating og relasjoner",
    "Spirituell vekst",
    "Reiseskildringer og nomadeliv"
]

# 游댳 Spr친kvalg optimalisert for Amazon KDP
spr친kvalg = {
    "Engelsk": "en",
    "Spansk": "es",
    "Tysk": "de",
    "Fransk": "fr",
    "Italiensk": "it",
    "Norsk": "no",
    "Nederlandsk": "nl",
    "Portugisisk": "pt"
}

# 游댳 Funksjoner for optimalisering

def analyser_og_rate_bok(boktekst, nisje, spr친k):
    prompt = f"""
    Evaluer denne teksten opp mot bestselgende b칮ker innen {nisje} p친 Amazon KDP. 
    Gi en score fra 1-100 basert p친:
    - Lesbarhet
    - Engasjement
    - SEO-optimalisering
    - Kommersiell appell
    Gi ogs친 forbedringsforslag for 친 칮ke salget. Skriv svaret p친 {spr친k}.
    
    Tekst:
    {boktekst}
    """
    
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7
    )
    
    return response.choices[0].message.content

def foresl친_bokpris(nisje, spr친k):
    prompt = f"""
    Analyser prisene p친 de bestselgende b칮kene innen {nisje} p친 Amazon KDP og foresl친 en optimal prisstrategi 
    for 친 maksimere volum-salg. Vurder:
    - Anbefalt prisniv친 for Kindle e-bok, paperback og hardcover.
    - Psykologiske prispunkter som gir h칮yere konvertering ($2.99, $4.99, $9.99 osv.).
    - Hvordan Kindle Unlimited kan p친virke salget.
    - Kampanjestrategier for 친 booste volum.
    - Hva de mest suksessrike forfatterne innen {nisje} gj칮r med prissetting.
    
    Skriv svaret p친 {spr친k}.
    """
    
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7
    )
    
    return response.choices[0].message.content

# 游댳 Streamlit-app
st.title("游닀 AI Bestselger-Bokgenerator for Amazon KDP")

ekspertmodus = st.checkbox("Ekspertmodus: Aktiver alle optimaliseringsverkt칮y")
analysemodus = st.checkbox("Analysemodus: Evaluer bokens salgspotensial")

spr친k = st.selectbox("Velg spr친k for boken:", list(spr친kvalg.keys()))
kategori = st.selectbox("Velg en bestselgende kategori:", ["Velg en kategori..."] + bestseller_nisjer)
antall_kapitler = st.slider("Velg antall kapitler", min_value=3, max_value=10, value=5)

if st.button("Generer Bok"):
    st.info("Genererer boken, vennligst vent...")
    valgt_spr친k = spr친kvalg[spr친k]
    
    def generer_bok(nisje, antall_kapitler, spr친k):
    kapittel_prompt = f"Generer en kapitteloversikt for en bestselgende bok om {nisje} med {antall_kapitler} kapitler. Skriv p친 {spr친k}."
    
    kapittel_response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": kapittel_prompt}],
        temperature=0.7
    )
    
    kapitler = kapittel_response.choices[0].message.content.split("\n")

    bok_tekst = f"# {nisje} - AI-generert bok ({spr친k})\n\n"
    
    for i, kapittel in enumerate(kapitler[:antall_kapitler]):
        if kapittel.strip():
            kapittel_prompt = f"""
            Skriv et detaljert kapittel med tittelen '{kapittel}' for en bestselgende bok om {nisje}. 
            Inkluder actionable tips, eksempler og praktiske 칮velser. 
            Skriv i en engasjerende og lettlest stil. Skriv p친 {spr친k}.
            """
            
            kapittel_response = client.chat.completions.create(
                model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": kapittel_prompt}],
                temperature=0.7
            )
            
            kapittel_tekst = kapittel_response.choices[0].message.content
            bok_tekst += f"## Kapittel {i+1}: {kapittel}\n\n{kapittel_tekst}\n\n"

    return bok_tekst
